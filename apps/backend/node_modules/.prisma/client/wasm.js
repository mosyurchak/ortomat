
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrtomatScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  total_cells: 'total_cells',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  first_name: 'first_name',
  last_name: 'last_name',
  middle_name: 'middle_name',
  phone: 'phone',
  is_verified: 'is_verified',
  created_at: 'created_at'
};

exports.Prisma.DoctorScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ortomat_id: 'ortomat_id',
  qr_code: 'qr_code',
  referral_code: 'referral_code',
  commission_rate: 'commission_rate',
  total_sales: 'total_sales',
  total_earnings: 'total_earnings'
};

exports.Prisma.CourierScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status: 'status'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category: 'category',
  size: 'size',
  price: 'price',
  image_url: 'image_url',
  video_url: 'video_url',
  attributes: 'attributes'
};

exports.Prisma.OrtomatInventoryScalarFieldEnum = {
  id: 'id',
  ortomat_id: 'ortomat_id',
  cell_number: 'cell_number',
  product_id: 'product_id',
  is_available: 'is_available',
  last_refill_date: 'last_refill_date',
  courier_id: 'courier_id'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  order_number: 'order_number',
  ortomat_id: 'ortomat_id',
  cell_number: 'cell_number',
  product_id: 'product_id',
  doctor_id: 'doctor_id',
  customer_phone: 'customer_phone',
  price: 'price',
  commission: 'commission',
  payment_status: 'payment_status',
  payment_id: 'payment_id',
  created_at: 'created_at',
  completed_at: 'completed_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Ortomat: 'Ortomat',
  User: 'User',
  Doctor: 'Doctor',
  Courier: 'Courier',
  Product: 'Product',
  OrtomatInventory: 'OrtomatInventory',
  Order: 'Order'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\ortomat\\apps\\backend\\node_modules\\.prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\ortomat\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../apps/backend/node_modules/.prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Ortomat {\n  id          String             @id @default(uuid())\n  name        String\n  address     String\n  total_cells Int                @default(37)\n  status      String             @default(\"active\")\n  created_at  DateTime           @default(now())\n  updated_at  DateTime           @updatedAt\n  inventory   OrtomatInventory[]\n  orders      Order[]\n  doctors     Doctor[]\n\n  @@map(\"ortomat\")\n}\n\nmodel User {\n  id            String   @id @default(uuid())\n  email         String   @unique\n  password_hash String\n  role          String\n  first_name    String\n  last_name     String\n  middle_name   String?\n  phone         String\n  is_verified   Boolean  @default(false)\n  created_at    DateTime @default(now())\n  doctor        Doctor?\n  courier       Courier?\n\n  @@map(\"users\")\n}\n\nmodel Doctor {\n  id              String   @id @default(uuid())\n  user_id         String   @unique\n  ortomat_id      String?\n  qr_code         String   @unique\n  referral_code   String   @unique\n  commission_rate Float    @default(10.0)\n  total_sales     Int      @default(0)\n  total_earnings  Float    @default(0.0)\n  user            User     @relation(fields: [user_id], references: [id])\n  ortomat         Ortomat? @relation(fields: [ortomat_id], references: [id])\n  orders          Order[]\n\n  @@map(\"doctors\")\n}\n\nmodel Courier {\n  id        String             @id @default(uuid())\n  user_id   String             @unique\n  status    String             @default(\"active\")\n  user      User               @relation(fields: [user_id], references: [id])\n  inventory OrtomatInventory[]\n\n  @@map(\"couriers\")\n}\n\nmodel Product {\n  id          String             @id @default(uuid())\n  name        String\n  description String?\n  category    String\n  size        String?\n  price       Float\n  image_url   String?\n  video_url   String?\n  attributes  Json?\n  inventory   OrtomatInventory[]\n  orders      Order[]\n\n  @@map(\"products\")\n}\n\nmodel OrtomatInventory {\n  id               String    @id @default(uuid())\n  ortomat_id       String\n  cell_number      Int\n  product_id       String?\n  is_available     Boolean   @default(true)\n  last_refill_date DateTime?\n  courier_id       String?\n  ortomat          Ortomat   @relation(fields: [ortomat_id], references: [id])\n  product          Product?  @relation(fields: [product_id], references: [id])\n  courier          Courier?  @relation(fields: [courier_id], references: [id])\n\n  @@map(\"ortomat_inventory\")\n}\n\nmodel Order {\n  id             String    @id @default(uuid())\n  order_number   String    @unique\n  ortomat_id     String\n  cell_number    Int\n  product_id     String\n  doctor_id      String?\n  customer_phone String?\n  price          Float\n  commission     Float?\n  payment_status String\n  payment_id     String?\n  created_at     DateTime  @default(now())\n  completed_at   DateTime?\n  ortomat        Ortomat   @relation(fields: [ortomat_id], references: [id])\n  product        Product   @relation(fields: [product_id], references: [id])\n  doctor         Doctor?   @relation(fields: [doctor_id], references: [id])\n\n  @@map(\"orders\")\n}\n",
  "inlineSchemaHash": "3ec11d3f3761b2fe15dda5f20af31f886d43352063919faf3c754f3388fa14d2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Ortomat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_cells\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"OrtomatInventory\",\"relationName\":\"OrtomatToOrtomatInventory\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrtomat\"},{\"name\":\"doctors\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToOrtomat\"}],\"dbName\":\"ortomat\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middle_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToUser\"},{\"name\":\"courier\",\"kind\":\"object\",\"type\":\"Courier\",\"relationName\":\"CourierToUser\"}],\"dbName\":\"users\"},\"Doctor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ortomat_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qr_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referral_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commission_rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"total_sales\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_earnings\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DoctorToUser\"},{\"name\":\"ortomat\",\"kind\":\"object\",\"type\":\"Ortomat\",\"relationName\":\"DoctorToOrtomat\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"DoctorToOrder\"}],\"dbName\":\"doctors\"},\"Courier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CourierToUser\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"OrtomatInventory\",\"relationName\":\"CourierToOrtomatInventory\"}],\"dbName\":\"couriers\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"video_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attributes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"OrtomatInventory\",\"relationName\":\"OrtomatInventoryToProduct\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToProduct\"}],\"dbName\":\"products\"},\"OrtomatInventory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ortomat_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cell_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_available\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"last_refill_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courier_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ortomat\",\"kind\":\"object\",\"type\":\"Ortomat\",\"relationName\":\"OrtomatToOrtomatInventory\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrtomatInventoryToProduct\"},{\"name\":\"courier\",\"kind\":\"object\",\"type\":\"Courier\",\"relationName\":\"CourierToOrtomatInventory\"}],\"dbName\":\"ortomat_inventory\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ortomat_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cell_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctor_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer_phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"commission\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"payment_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ortomat\",\"kind\":\"object\",\"type\":\"Ortomat\",\"relationName\":\"OrderToOrtomat\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderToProduct\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToOrder\"}],\"dbName\":\"orders\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

